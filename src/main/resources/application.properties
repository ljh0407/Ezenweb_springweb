# 1. Server port change
server.port = 8080

# 2. Spring data <-----> db connection [ p.150 ]
## 2-1 JDBC ???? ?? [ DBMS ?? ?? ]
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
## 2-2 db ??
spring.datasource.url=jdbc:mysql://localhost:3306/springweb
## 2-3 db ??
spring.datasource.username=root
## 2-3 db ????
spring.datasource.password=1234

# 3. JPA
## 3-1 DDL ????
### spring.jpa.hibernate.ddl-auto = create   ?? ??? DB ???
#spring.jpa.hibernate.ddl-auto = create
### spring.jpa.hibernate.ddl-auto = update  ?? ??? ??? ???? ??[????]
spring.jpa.hibernate.ddl-auto = update

## 3-2 ??? sql ? console ????
spring.jpa.properties.hibernate.show_sql = true
## 3-3 ??? sql ? console? sql ???? ??
spring.jpa.properties.hibernate.format_sql=true

# spring mail sender
spring.mail.host = smtp.naver.com
spring.mail.port = 587
spring.mail.username =
spring.mail.password =
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls = true

# oauth2 kakao
# spring.security.oauth2.client.registration.kakao.client-id = restapi key
# spring.security.oauth2.client.registration.kakao.client-secret = client-secret code ???
# spring.security.oauth2.client.registration.kakao.scope = ????

spring.security.oauth2.client.registration.kakao.client-id =cce319f8700058af3f8827b6b58b7075
spring.security.oauth2.client.registration.kakao.client-secret =pLDYRD7RF8CCf7jXpzsQcAakziMrkyvU
spring.security.oauth2.client.registration.kakao.scope = profile_nickname , account_email

spring.security.oauth2.client.registration.kakao.redirect-uri = {baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.client-name = kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = kakao_account

# oauth2 naver
spring.security.oauth2.client.registration.naver.client-id =WLDrDIgBWkV5WnhoM3yn
spring.security.oauth2.client.registration.naver.client-secret =E7r79KGkbY
spring.security.oauth2.client.registration.naver.scope = nickname,email

spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# oauth2 google
spring.security.oauth2.client.registration.google.client-id =1026444506914-n9ivjdb249qoadll66pkhsqnp3eoqdjp.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret =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
spring.security.oauth2.client.registration.google.scope = email , profile


# view controller ---> react build file [js]
spring.mvc.pathmatch.matching-strategy = ant_path_matcher
